.shared-period{'style': period.color_hex ? "border-color: #{period.color_hex}" : nil, 'data-controller': 'period', 'data-period-id': period.id}
	= form.fields_for :periods, period do |fields|
		- blur_action = 'blur->period#handleBlur'
		- change_action = 'change->period#handleBlur'

		- date_start = enabled ? fields.date_field(:start, value: period.start.to_date, 'data-action': blur_action, 'data-id': 'start', class: 'date-field') : friendly_date(period.start)
		- date_end = enabled ? fields.date_field(:end, value: period.end.to_date, 'data-action': blur_action, 'data-id': 'end', class: 'date-field') : friendly_date(period.end)

		= shared 'editable_text', { tag: 'h3', id: 'title', text: period.title, placeholder: 'Название', enabled:, form_field: :title, form: fields, custom_actions: blur_action, data: { 'period-trigger': 'title' } }
		= shared 'editable_text', { tag: 'p', html_class: 'multiline', id: 'description', text: period.description, placeholder: 'Описание', enabled:, form_field: :description, form: fields, custom_actions: blur_action, data: { 'period-trigger': 'description' } }
		%p #{date_start} → #{date_end}

		- period.photos.each do |photo|
			-# No need for 'image' helper here as 'photo' is not a string
			= image_tag photo
		
		%img.no-display{id: "template-#{period.id}"}

		- if enabled
			= shared 'file_button', { label: :photos, fields:, selected: !period.photos.empty?, multiple: true, delete_param: 'delete-period-photo', id: period.id, html_class: 'file-button' }
			= fields.color_field(:color_hex, value: period.color_hex || '#6290C8', 'data-action': change_action, 'data-id': 'color_hex')
			= shared 'button', { text: 'Удалить', link: set_param('delete-period', period.id), advance: true, no_preload: true, size: 'xs', color: 'red', hollow: true, html_class: 'delete-button' }
